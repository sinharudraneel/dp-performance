//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_70
.address_size 64

	// .globl	triton_

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2,
	.param .u64 triton__param_3	// For tracking counter
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<17>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<9>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd5, [triton__param_0];
	ld.param.u64 	%rd6, [triton__param_1];
	ld.param.u64	%rd8, [triton__param_3];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm

	setp.eq.s32 %p3, %r1, 0;    // Check if block ID is 0
    	mov.u32 %r8, %tid.x;        // This already exists a few lines down, can reuse it
    	setp.eq.s32 %p4, %r8, 0;    // Check if thread ID is 0
    	and.pred %p5, %p3, %p4;     // Combine predicates
    	@%p5 atom.global.add.s32 %r10, [%rd8], 1;  // Atomic increment	

	.loc	1 19 33
	shl.b32 	%r6, %r1, 9;
	ld.param.u32 	%r7, [triton__param_2];
	.loc	1 20 36
	mov.u32 	%r8, %tid.x;
	shl.b32 	%r9, %r8, 1;
	and.b32  	%r10, %r9, 510;
	.loc	1 20 23
	or.b32  	%r11, %r6, %r10;
	or.b32  	%r12, %r11, 1;
	.loc	1 21 21
	setp.lt.s32 	%p1, %r11, %r7;
	setp.lt.s32 	%p2, %r12, %r7;
	.loc	1 23 30
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd1, %rd5, %rd7;
	add.s64 	%rd2, %rd1, 4;
	.loc	1 23 35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p2 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
$L__tmp1:
	.loc	2 82 15
	setp.gt.f32 	%p5, %f1, 0fBF800000;
	setp.gt.f32 	%p6, %f2, 0fBF800000;
	.loc	2 84 21
	setp.nan.f32 	%p7, %f1, %f1;
	setp.nan.f32 	%p8, %f2, %f2;
	.loc	2 85 29
	selp.f32 	%f3, %f1, 0fBF800000, %p7;
	selp.f32 	%f4, %f1, %f3, %p5;
	selp.f32 	%f5, %f2, 0fBF800000, %p8;
	selp.f32 	%f6, %f2, %f5, %p6;
$L__tmp2:
	.loc	2 74 15
	setp.lt.f32 	%p9, %f4, 0f3F800000;
	setp.lt.f32 	%p10, %f6, 0f3F800000;
	.loc	2 76 21
	setp.nan.f32 	%p11, %f4, %f4;
	setp.nan.f32 	%p12, %f6, %f6;
$L__tmp3:
	.loc	1 28 36
	mov.b32 	%r13, %f4;
	mov.b32 	%r14, %f6;
	.loc	1 28 25
	add.s64 	%rd3, %rd6, %rd7;
	add.s64 	%rd4, %rd3, 4;
	.loc	1 28 36
	selp.b32 	%r15, %r13, 1065353216, %p11;
	selp.b32 	%r4, %r13, %r15, %p9;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r4 };
	// end inline asm
	selp.b32 	%r16, %r14, 1065353216, %p12;
	selp.b32 	%r5, %r14, %r16, %p10;
	// begin inline asm
	@%p2 st.global.b32 [ %rd4 + 0 ], { %r5 };
	// end inline asm
	.loc	1 28 4
	ret;
$L__tmp4:
$L__func_end0:

}
	.file	1 "/tmp/torchinductor_root/3t/c3tj6j2dhpb27zrxdtlbttaf5tbl6gwikz2odrgrybeath3f3yzq.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 201
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 51
.b8 116
.b8 106
.b8 54
.b8 106
.b8 50
.b8 100
.b8 104
.b8 112
.b8 98
.b8 50
.b8 55
.b8 122
.b8 114
.b8 120
.b8 100
.b8 116
.b8 108
.b8 98
.b8 116
.b8 116
.b8 97
.b8 102
.b8 53
.b8 116
.b8 98
.b8 108
.b8 54
.b8 103
.b8 119
.b8 105
.b8 107
.b8 122
.b8 50
.b8 111
.b8 100
.b8 114
.b8 103
.b8 114
.b8 121
.b8 98
.b8 101
.b8 97
.b8 116
.b8 104
.b8 51
.b8 102
.b8 51
.b8 121
.b8 122
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 116
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 124
.b8 4
.b32 124
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 25
.b8 40
.b8 4
.b32 124
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 27
.b8 40
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
